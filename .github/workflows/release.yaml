name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      repository:
        description: Repository to clone and build
        type: string
        default: kvcache-ai/Mooncake
      ref:
        description: Branch/tag/ref to build
        type: string
        required: true
env:
  SCCACHE_GHA_ENABLED: "true"
jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    strategy:
      matrix:
        python-version: ['3.10']
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.ref }}
          path: Mooncake
          
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.9

      - name: Install system dependencies and build project
        run: |
          sudo apt update -y
          cd Mooncake
          sudo bash -x dependencies.sh -y
          mkdir build
          cd build
          cmake .. -DUSE_ETCD=ON -DUSE_HTTP=ON -DCMAKE_C_COMPILER_LAUNCHER=${SCCACHE_PATH} -DCMAKE_CXX_COMPILER_LAUNCHER=${SCCACHE_PATH}
          sudo make install -j
        shell: bash

      - name: Run sccache stat for check
        shell: bash
        run: ${SCCACHE_PATH} --show-stats

      - name: Generate Python version tag
        id: generate_tag_release
        run: |
          echo "python_version_tag=$(echo ${{ matrix.python-version }} | tr -d '.')" >> $GITHUB_OUTPUT
        shell: bash

      - name: Build Python wheel
        run: |
          # Set LD_LIBRARY_PATH for wheel building
           cd Mooncake
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
          PYTHON_VERSION=${{ matrix.python-version }} OUTPUT_DIR=dist-py${{ steps.generate_tag_release.outputs.python_version_tag }} ./scripts/build_wheel.sh
        env:
          VERSION: ${{ env.VERSION }}

      - name: Upload Python wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: mooncake-wheel-py${{ steps.generate_tag_release.outputs.python_version_tag }}
          path: Mooncake/mooncake-wheel/dist-py${{ steps.generate_tag_release.outputs.python_version_tag }}/*.whl

  publish-release:
    needs: build
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.ref }}
          path: Mooncake

      - name: Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: Mooncake/mooncake-wheel/dist-all

      - name: Prepare wheels for release
        run: |
          cd Mooncake
          # Move all wheels to a single directory
          mkdir -p mooncake-wheel/dist-release
          find mooncake-wheel/dist-all -name "*.whl" -exec cp {} mooncake-wheel/dist-release/ \;
          ls -la mooncake-wheel/dist-release/
          # List all collected wheels
          echo "Collected wheels for release:"
          ls -la mooncake-wheel/dist-release/

      - name: Upload wheels to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: Mooncake/mooncake-wheel/dist-release/*.whl
